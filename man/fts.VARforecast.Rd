% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fts.VARforecast.R
\name{fts.VARforecast}
\alias{fts.VARforecast}
\title{Functional Time Series Forecasting using VAR Models}
\usage{
fts.VARforecast(
  fdaobj,
  K = 3,
  p = 1,
  AR = FALSE,
  start = NULL,
  end = NULL,
  h = 1
)
}
\arguments{
\item{fdaobj}{An object of class "fdaobj", typically the output from \code{fda.preprocess} or \code{fts.cumAC}.}

\item{K}{Integer specifying the number of factors to consider in the forecast model.}

\item{p}{Integer defining the number of lags to include in the VAR model.}

\item{AR}{A logical flag indicating whether to model individual AR(p) processes (TRUE) for each factor, or a collective VAR(p) model (FALSE). Default is FALSE.}

\item{start}{Optional integer specifying the start index for a restricted sample period.}

\item{end}{Optional integer specifying the end index for a restricted sample period.}

\item{h}{Forecast horizon. If h=0, an in-sample fit is returned. If h > 0, an out-of-sample h-step forecast is generated. Default is h=1.}
}
\value{
The function returns different outputs based on the value of h.
If h > 0: Returns the h-step ahead forecasted functional time series curve.
If h = 0: Returns a list containing:
\item{curve.predict}{The in-sample predicted curves.}
\item{factors.predict}{The in-sample predicted factors.}
\item{factors}{The actual factors from the input object.}
\item{MSE}{The Mean Squared Error of the in-sample predicted curves.}
\item{VARmatrix}{The estimated VAR matrix.}
}
\description{
This function implements Vector Autoregression (VAR) forecasting for functional time series using preprocessed data from "fpcaobj" objects generated by fda.preprocess (FPC) or fts.cumAC (cumulative autocovariances). It allows for both in-sample fit evaluation and out-of-sample forecasting with the option to specify the model as individual autoregressive (AR) processes or a VAR process.
}
\examples{
# Load, preprocess data, and perform in-sample prediction
fed = load.fed()
fdaobj = fda.preprocess(data = fed)
in_sample_fit = fts.VARforecast(fdaobj, h=0)
# Perform 1-step ahead prediction
one_step_ahead = fts.VARforecast(fdaobj, h=1)
}
