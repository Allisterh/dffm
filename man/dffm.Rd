% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dffm.R
\name{dffm}
\alias{dffm}
\title{dffm}
\usage{
dffm(fpcaobj, K = NULL, p = NULL, AR = FALSE)
}
\arguments{
\item{fpcaobj}{A multivariate time series of class 'ts' or 'data.frame' or an object of the class 'FPCAobj'.}

\item{K}{A parameter which specifies the number of factors be used. If K is NULL, K will be 4. NULL is default.}

\item{p}{A parameter which specifies the number of lags will be used for the factor dynamics.}

\item{AR}{Will determine if factor dynamics will be based on vector autoregressive models or autoregressive models.
If AR is FALSE computations for factor dynamics will be based on vector autoregressive models. FALSE is default.}
}
\value{
dffm will return an object of class 'dffm' with:
\item{K}{Used number of factors in the analysis.}
\item{p}{Used number of lags used for the factor dynamics.}
\item{fpcascores}{A matrix/ts-matrix of the computed factorscores.}
\item{factordynamics}{Used factor dynamics method.}
\item{VARcoefficients}{A matrix of the computed factor dynamics.}
\item{loadingfunctions.obsgrid}{A matrix containing the estimated loading functions, which are evaluated on the observationgrid.}
\item{meanfunction.obsgrid}{A vector containing the estimated mean function, which is evalauted on the observationgrid.}
\item{loadingfunctions.workgrid}{A matrix containing the estimated loading functions, which are evaluated on the observationgrid.}
\item{meanfunction.workgrid}{A vector containing the estimated mean function, which is evalauted on the workinggrid.}
\item{fittedcurve.obsgrid}{A matrix/ts-matrix of the fitted curves evaluated on the observationgrid.}
\item{fittedcurve.workgrid}{A matrix/ts-matrix of the fitted curves evaluated on the workinggrid.}
\item{observationgrid}{Used observationgrid in the analysis.}
\item{workinggrid}{Used workinggrid in the analysis.}
\item{FPCA}{Object of class 'FPCAobj' computed from the 'fpca.preprocess' function. For more details see 'fpca.preprocess' function.}
}
\description{
dffm is a function which performs a complete functional data analysis on a multivariate time series.
}
\examples{
# with object of class 'FPCAobj'
fed = load.fed()
fpca = fpca.preprocess(data = fed, method = "splines")
dffm(fpca)
# with raw data
fed = load.fed()
dffm(fed, K = 3, p = 2, AR = FALSE)
}
\references{
\itemize{
\item Kokoszka P. and Reimherr M. (2017), "Introduction to Functional Data Analysis". CRC Press.
\item Otto S. and Salish N. (2022). "Dynamic Factor Model for Functional Time Series: Identification, Estimation, and Prediction". ...
\item Yao, F., Mueller, H.-G., and Wang, J.-L. (2005). Functional data analysis for sparse longitudinal
data. Journal of the American Statistical Association, 100:577-590.
}
}
