% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fda.preprocess.R
\name{fda.preprocess}
\alias{fda.preprocess}
\title{Natural Spline Preprocessing of Funtional Data}
\usage{
fda.preprocess(data, observationgrid = NULL, workinggrid = NULL)
}
\arguments{
\item{data}{A multivariate time series or data in 'ts' or 'data.frame' format. The function expects data to represent discrete observations of functional data (functional time series) that may contain missing values.}

\item{observationgrid}{An optional numeric vector specifying the observation grid of the input data. If NULL (default), the function attempts to infer the grid from column names of 'data'.}

\item{workinggrid}{An optional numeric vector defining an equidistant grid for the analysis. If NULL (default), the function generates an equidistant grid based on the minimum difference in 'observationgrid'}
}
\value{
Returns an object of class 'fdaobj', which includes the following components:
\item{densedata}{The data interpolated onto the dense working grid.}
\item{workinggrid}{The generated or specified dense equidistant working grid.}
\item{operator}{The operator for which the eigenelements are computed. Here: "sample_covariance(FPC)".}
\item{scores}{The coefficients representing the projections of 'densedata' onto each eigenfunction.}
\item{eigenfunctions}{A matrix of orthonormal eigenfunctions derived from the sample covariance operator, representing the functional principal components.}
\item{eigenvalues}{The eigenvalues associated with each eigenfunction, indicating the variance explained by each principal component.}
\item{scores.centered}{The projection coefficients after demeaning 'densedata'.}
\item{meanfunction}{The sample mean function calculated across the dense data.}
\item{raw.data}{The original input data.}
\item{observationgrid}{The observation grid used or inferred from the input data.}
}
\description{
The \code{fda.preprocess} function transforms discrete point observations of functional data (functional time series) into functional data evaluated on a dense equidistant grid. This function uses a direct interpolation approach, using natural splines to interpolate missing values. In addition, it performs the eigendecomposition of the sample covariance operator and computes the empirical Karhunen-Lo√®ve expansion (empirical functional principal components). Missing values at the beginning or end are reconstructed using the Kneip and Liebl (2020) optimal reconstruction operator.
}
\examples{
# Example with standard working grid
fed = load.fed()
fda.preprocess(data = fed)

# Example with a customized tighter working grid
wg = seq(1,360, by=0.5)
fda.preprocess(fed, workinggrid = wg)
}
\references{
\itemize{
\item Hsing, T., & Eubank, R. (2015). Theoretical foundations of functional data analysis, with an introduction to linear operators. John Wiley & Sons.
\item Kneip, A., & Liebl, D. (2020). On the optimal reconstruction of partially observed functional data. The Annals of Statistics, 48, 1692-1717.
\item Otto, S., & Salish, N. (2024). Approximate Factor Models For Functional Time Series. arXiv:2201.02532.
}
}
